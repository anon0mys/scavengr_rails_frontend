<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title>Set a point after Geocoder result</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.47.0/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.47.0/mapbox-gl.css' rel='stylesheet' />
    <style>
        body { margin:0; padding:0; }
        .new-point-container { display:flex; flex-direction:column; padding:2%; }
        #map { position:absolute; top:25%; bottom:25%; right:0; width:50%; }
        #form { position: absolute; top:25%; bottom:25%; left:0; width:50%; }
    </style>
</head>
<body>

<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.3.0/mapbox-gl-geocoder.min.js'></script>
<link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.3.0/mapbox-gl-geocoder.css' type='text/css' />
<style>
#geocoder-container > div {
    min-width:50%;
    margin-left:25%;
}
</style>
<div class="flash-message"></div>
<div class="new-point-container">
  <div id='form'>
    <h2>Create a Point</h2>
    <form action="/action_page.php">
      Clue: <input type="text" name="clue" required><br>
      Message: <input type="text" name="message" required><br>
      Address: <input type="text" name="address" disabled><br>
      <input type="hidden" id="coordinates" name="coordinates" value="">
      <input type="submit" id="new-point-btn" value="Add Point">
    </form>
  </div>
  <div id='map'></div>
</div>


<script>


mapboxgl.accessToken = 'pk.eyJ1IjoiaWRlYWx0eXBpY2FsIiwiYSI6ImNqazBjcG1tZDA1ZjIzcHFsY3NzeDZjbGUifQ.TKZIYgbzt9g7HVfScLh2cg';
var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/streets-v9',
    center: [-79.4512, 43.6568],
    zoom: 13
});

var geocoder = new MapboxGeocoder({
    accessToken: mapboxgl.accessToken
});

map.addControl(geocoder);

// After the map style has loaded on the page, add a source layer and default
// styling for a single point.
map.on('load', function() {
    map.addSource('single-point', {
        "type": "geojson",
        "data": {
            "type": "FeatureCollection",
            "features": []
        }
    });

    map.addLayer({
        "id": "point",
        "source": "single-point",
        "type": "circle",
        "paint": {
            "circle-radius": 10,
            "circle-color": "#007cbf"
        }
    });

    // Listen for the `result` event from the MapboxGeocoder that is triggered when a user
    // makes a selection and add a symbol that matches the result.
    geocoder.on('result', function(ev) {
        let location = map.getSource('single-point').setData(ev.result.geometry);
        address = $('input[placeholder="Search"]').val();
        $('input[name="coordinates"]').val(location._data.coordinates);
        $('input[name="address"]').val(address);
    });
});

$(document).ready(() => {
  $("#new-point-btn").on("click", addPoint);
});


function addPoint(event) {
  event.preventDefault()
  let url = window.location.pathname;
  let scavenger_hunt_id = url.split('/')[2];
  point = buildPoint(scavenger_hunt_id)
  fetch(`/scavenger_hunts/${scavenger_hunt_id}/points`, {
    method: 'POST',
    credentials: "same-origin",
    body: JSON.stringify(point)
  })
  .then(response => {
    if(response.ok) {
      return response.json()
    } else {
      throw new Error('Failed')
    }
  })
  .then((data) => {
    $(".flash-message").html("<p>Successfully added new point</p>");
    $('input[name="clue"]').val("");
    $('input[name="message"]').val("");
    $('input[name="address"]').val("");
    $('input[name="coordinates"]').val("");
    $('input[placeholder="Search"]').val("")
  })
  .catch(error => {
    $(".flash-message").html("<p>Failed to create point</p>")
  })
}

function buildPoint(scavenger_hunt_id) {
  return { point: {
      scavenger_hunt_id: scavenger_hunt_id,
      clue: $('input[name="clue"]').val(),
      message: $('input[name="message"]').val(),
      address: $('input[name="address"]').val(),
      location: $('input[name="coordinates"]').val().split(',').map(coord => parseFloat(coord))
    }
  }
}
</script>

</body>
</html>
